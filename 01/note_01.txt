

类型
    数值类型
        整型
        浮点型

    字符类型


整型
    short
    int
    long
    long long

    对于 整型类型，支持 无符号 unsigned


    printf
        %d - decimal
        %u - unsigned decimal
        %% - %
        %s - string
        \n
        \t

        %ld
        %lld

        %hd - short decimal
        %hu - unsigned short decimal

        %x - hex
        %o - oct


浮点型
    float
    double


字符类型
    char
        ASCII

    A: 65
    Z: 90

    a: 97
    z: 122

    a - A = 32
    z - a = 25

    字面量 - literal
        \n: newline
        \b: backspace
        \r: return
        \t: table
        \': '
        \": "


    ASCII, 字符集, 127
        扩展, 255


浮点型
    float, 单精度
        6位有效数字

    double, 双精度
        15位有效数字

    12345
        1.2345e4，科学计数法
            1位, 符号位
            8位, 表示指数, 4, 即e4
                -127 -> 128
            23位, 表示尾数, 2345


变量，Variable
    字母，数字，下划线
    数字不能在开头

    user_name


常量, Const
    const, 运行时常量
    macro, 编译时常量
        micro

        查看预处理之后的c文件
            $ gcc -E 07_const.c -o output.c

    字面量, literal
        1
        3.14
        'c'
        "hi"


运算符
    =
    +
    -
    *
    /, 整型, 地板除法, floor
    %

    +=
    -=
    *=
    /=
    %=


    >
    <
    ==
        true: 1, 非0为真
        false: 0, 0为假
    !=
    >=
    <=


    &&
    ||
    !
        短路现象


    ++，前自增，后自增
        ++a
        a++

    --，前自减，后自减
        --a
        a--


    &
    |
    ^
    ~

    &=
    |=
    ^=
    ~=


    <<
    >>
    <<=
    >>=

    ,


分支
    C99, bool

    if (cond) {
        // ...
    }

    if (cond) {
        // ...
    } else {
        // ...
    }

    if (cond_1) {
        // ...
    } else if (cond_2) {
        // ...
    } else {
        // ...
    }



    int result = x > y ? 1 : 0;


    switch(cond) {
        case cond_1:
            break;
        case cond_2:
            break;
        case cond_3:
            break;
        default:
            // ...
    }





循环
    while (cond) {
        // ...
    }

    do {
        // ...
    } while(cond);

    for (initialization; condition; statement) {
        // ...
    }
    注: C99 之前不允许 int i;

    求和, [1, 100]


    continue
    break
    goto



