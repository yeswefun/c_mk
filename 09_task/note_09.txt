

线程作为CPU 资源的最小单位
    解决了同一个进程同一时刻只能占用一个核的问题
    解决了同一个进程只能串行执行程序的问题




thrd_yield(); // 让出 cpu


线程运行结束之后，不会主动释放资源
    thrd_join
    thrd_detach


资源的线程安全问题
    同一个进程内的多个线程是可以共享该进程内的

原子操作
非原子操作

对共享资源的非原子修改 - 线程不安全

共享资源的可见性，代码重排序
    线程A对某个资源的修改并不一定立刻能让线程B看见

    cpu 缓存 同步 到 内存，此时 线程B才能看见修改







